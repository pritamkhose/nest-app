{
	"info": {
		"_postman_id": "bcefd63c-5c37-4ecf-bb75-b9ba1e52d9af",
		"name": "NestApp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Cats",
			"item": [
				{
					"name": "Cats Add",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    var jsonReq = JSON.parse(pm.request.body);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonReq.name).to.eql(jsonData.name);",
									"    pm.expect(jsonReq.age).to.eql(jsonData.age);",
									"    pm.expect(jsonReq.breed).to.eql(jsonData.breed);",
									"    pm.environment.set(\"cat_id\", jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Kitty\",\n  \"age\": 1,\n  \"breed\": \"Maine Coon\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/cats",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cats by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cats/{{cat_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cats",
								"{{cat_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cats All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cats",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Home",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}",
					"host": [
						"{{baseURL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Swagger UI",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/swagger",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"swagger"
					]
				}
			},
			"response": []
		},
		{
			"name": "Graphql UI",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"query viewerQuery { viewer { id, name, status } }\",\n  \"operationName\": \"viewerQuery\",\n  \"variables\": { }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/graphql",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Graphql Api",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"query\": \"query viewerQuery { viewer { id, name, status } }\",\n  \"operationName\": \"viewerQuery\",\n  \"variables\": { }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/graphql",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}